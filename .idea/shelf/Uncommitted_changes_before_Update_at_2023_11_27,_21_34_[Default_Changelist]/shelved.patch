Index: project/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project/__init__.py b/project/__init__.py
--- a/project/__init__.py	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
+++ b/project/__init__.py	(date 1699883976482)
@@ -1,0 +1,70 @@
+# gcount = 0
+#
+# def global_test():
+#     gcount+=1
+#     print (gcount)
+# global_test()
+
+
+# gcount = 0
+#
+#
+# def global_test():
+#     global gcount
+#     gcount += 1
+#     print(gcount)
+#
+# global_test()
+
+# gcount = 0
+#
+#
+# def global_test():
+#     print(gcount)
+#
+#
+# global_test()
+
+# def make_counter():
+#     count = 0
+#
+#     def counter():
+#         nonlocal count
+#         count += 1
+#         return count
+#
+#     return counter
+#
+#
+# def make_counter_test():
+#     mc = make_counter()
+#     print(mc())
+#     print(mc())
+#     print(mc())
+#
+#
+# make_counter_test()
+
+def scope_test():
+    def do_local():
+        spam = "local spam"  # 此函数定义了另外的一个spam字符串变量，并且生命周期只在此函数内。此处的spam和外层的spam是两个变量，如果写出spam = spam + “local spam” 会报错
+
+    def do_nonlocal():
+        nonlocal spam  # 使用外层的spam变量
+        spam = "nonlocal spam"
+
+    def do_global():
+        global spam
+        spam = "global spam"
+
+    spam = "test spam"
+    do_local()
+    print("After local assignmane:", spam)
+    do_nonlocal()
+    print("After nonlocal assignment:", spam)
+    do_global()
+    print("After global assignment:", spam)
+
+
+scope_test()
+print("In global scope:", spam)
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38_[Default_Changelist]/shelved.patch	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
+++ /dev/null	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
@@ -1,114 +0,0 @@
-Index: leetcode_base/bank/_2760.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- leetcode_base/bank/_2760.py	(date 1700130743876)
-+++ leetcode_base/bank/_2760.py	(date 1700130743876)
-@@ -0,0 +1,36 @@
-+from typing import List
-+
-+
-+class _1st:
-+    def longestAlternatingSubarray(self, nums: List[int], threshold: int) -> int:
-+        n = len(nums)
-+        l, r = 0, 0
-+        ans = 0
-+        while l < n:
-+            if nums[l] % 2 == 0:
-+                r = l
-+                while r < n - 1 and nums[r] <= threshold and nums[r] % 2 != nums[r + 1] % 2:
-+                    r += 1
-+                ans = max(ans, r - l + 1)
-+            l = r + 1
-+        return ans
-+
-+
-+class _2nd:
-+    print("")
-+
-+
-+class _3rd:
-+    print("")
-+
-+
-+class _4th:
-+    print("")
-+
-+
-+if __name__ == '__main__':
-+    handlers = [_1st()]
-+    for handler in handlers:
-+        nums = [3, 2, 5, 4]
-+        threshold = 5
-+        handler.longestAlternatingSubarray(nums, threshold)
-Index: leetcode_base/bank/_2300.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- leetcode_base/bank/_2300.py	(date 1699577382392)
-+++ leetcode_base/bank/_2300.py	(date 1699577382392)
-@@ -0,0 +1,62 @@
-+from typing import List
-+
-+
-+class _1st:
-+    def successfulPairs(self, spells: List[int], potions: List[int], success: int) -> List[int]:
-+        n, m = len(spells), len(potions)
-+        potions.sort()
-+        ans = [0] * n
-+        # 闭区间
-+        for i in range(0, n):
-+            x = spells[i]
-+            l, r = 0, m - 1
-+            while l < r:
-+                mid = l + (r - l + 1) // 2
-+                if potions[mid] * x >= success:
-+                    r = mid - 1
-+                else:
-+                    l = mid
-+            ans[i] = m - l
-+            if x * potions[l] < success:
-+                ans[i] -= 1
-+        return ans
-+
-+
-+class _2nd:
-+    def successfulPairs(self, spells: List[int], potions: List[int], success: int) -> List[int]:
-+        n, m = len(spells), len(potions)
-+        potions.sort()
-+        ans = [0] * n
-+        # 开区间
-+        for i in range(0, n):
-+            x = spells[i]
-+            l, r = -1, m
-+            while l + 1 < r:
-+                mid = l + (r - l + 1) // 2
-+                if potions[mid] * x >= success:
-+                    r = mid
-+                else:
-+                    l = mid
-+            ans[i] = m - l - 1
-+        return ans
-+
-+
-+class _3rd:
-+    print("")
-+
-+
-+class _4th:
-+    print("")
-+
-+
-+if __name__ == '__main__':
-+    handlers = [_2nd()]
-+    for handler in handlers:
-+        spells = [3, 1, 2]
-+        potions = [8, 5, 8]
-+        success = 16
-+        handler.successfulPairs(spells, potions, success)
-+        # spells = [15, 8, 19]
-+        # potions = [38, 36, 23]
-+        # success = 328
-+        # handler.successfulPairs(spells, potions, success)
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38__Default_Changelist_.xml	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
+++ /dev/null	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023_11_16_18_38_[Default_Changelist]" date="1700131114481" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_11_16_18_38_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023/11/16 18:38 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: leetcode_base/bank/_300.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/leetcode_base/bank/_300.py b/leetcode_base/bank/_300.py
new file mode 100644
--- /dev/null	(date 1700144096221)
+++ b/leetcode_base/bank/_300.py	(date 1700144096221)
@@ -0,0 +1,50 @@
+from bisect import bisect_left
+from functools import cache
+from typing import List
+
+
+class _1st:
+    def lengthOfLIS(self, nums: List[int]) -> int:
+
+        @cache
+        def dfs(i: int) -> int:
+            res = 0
+            for j in range(i):
+                if nums[j] < nums[i]:
+                    res = max(res, dfs(j))
+            return res + 1
+
+        return max(dfs(i) for i in range(len(nums)))
+
+
+class _2nd:
+    def lengthOfLIS(self, nums: List[int]) -> int:
+        f = [0] * len(nums)
+        for i, x in enumerate(nums):
+            for j, y in enumerate(nums[:i]):
+                if x > y:
+                    f[i] = max(f[i], f[j])
+            f[i] += 1
+        return max(f)
+
+
+class _3rd:
+    def lengthOfLIS(self, nums: List[int]) -> int:
+        g = []
+        for x in nums:
+            j = bisect_left(g, x)
+            if j == len(g):
+                g.append(x)
+            else:
+                g[j] = x
+        return len(g)
+
+
+class _4th:
+    print("")
+
+
+if __name__ == '__main__':
+    handlers = [_1st()]
+    for handler in handlers:
+        print("")
Index: leetcode_base/bank/_122.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/leetcode_base/bank/_122.py b/leetcode_base/bank/_122.py
new file mode 100644
--- /dev/null	(date 1700227309658)
+++ b/leetcode_base/bank/_122.py	(date 1700227309658)
@@ -0,0 +1,52 @@
+from cmath import inf
+from functools import cache
+from typing import List
+
+
+class _1st:
+    def maxProfit(self, prices: List[int]) -> int:
+        n = len(prices)
+
+        @cache
+        def dfs(i, hold):
+            if i < 0:
+                return -inf if hold else 0
+            if hold:
+                return max(dfs(i - 1, True), dfs(i - 1, False) - prices[i])
+            return max(dfs(i - 1, False), dfs(i - 1, True) + prices[i])
+
+        return dfs(n - 1, False)
+
+
+class _2nd:
+    def maxProfit(self, prices: List[int]) -> int:
+        n = len(prices)
+        f = [[0] * 2 for _ in range(n + 1)]
+        f[0][0] = 0
+        f[0][1] = -inf
+        for i in range(n):
+            f[i + 1][0] = max(f[i][0], f[i][1] + prices[i])
+            f[i + 1][1] = max(f[i][1], f[i][0] - prices[i])
+        return f[n][0]
+
+
+class _3rd:
+    def maxProfit(self, prices: List[int]) -> int:
+        n = len(prices)
+        f0 = 0
+        f1 = -inf
+        for p in prices:
+            new_f0 = max(f0, f1 + p)
+            f1 = max(f1, f0 - p)
+            f0 = new_f0
+        return f0
+
+
+class _4th:
+    print("")
+
+
+if __name__ == '__main__':
+    handlers = [_1st()]
+    for handler in handlers:
+        print("")
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.7\" project-jdk-type=\"Python SDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
+++ b/.idea/misc.xml	(date 1700143241050)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/leetcode-climbing-py.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.7\" jdkType=\"Python SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"PyDocumentationSettings\">\n    <option name=\"renderExternalDocumentation\" value=\"true\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/leetcode-climbing-py.iml b/.idea/leetcode-climbing-py.iml
--- a/.idea/leetcode-climbing-py.iml	(revision 01ae6893de722c2568e8d74df88688a7b545c7fd)
+++ b/.idea/leetcode-climbing-py.iml	(date 1700143241047)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.7" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.9" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
